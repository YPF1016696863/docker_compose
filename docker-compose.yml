# This configuration file is for the **development** setup.
# For a production example please refer to setup/docker-compose.yml.
version: '3.7'
x-datavis-backend: &datavis-backend
  image: guwenqing/datavis-backend:latest
  depends_on:
    - postgres
    - redis
  restart: always
services:
  redis:
    image: redis:3-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
  postgres:
    image: postgres:9.5-alpine
    ports:
      - "5432:5432"
    volumes:
      - /opt/redash/postgres_data:/var/lib/postgresql/data
#    command: "postgres -c fsync=off -c full_page_writes=off -c synchronous_commit=OFF"
    restart: always
  server:
    <<: *datavis-backend
    command: dev_server
    ports:
      - "5000:5000"
      - "5678:5678"
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres@postgres/postgres"
      REDASH_RATELIMIT_ENABLED: "false"
  worker:
    <<: *datavis-backend
    command: scheduler
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres@postgres/postgres"
      QUEUES: "queries,scheduled_queries,celery,schemas"
      WORKERS_COUNT: 2
  mysql-demo:
    image: mysql:5.6
    volumes:
      - /opt/redash/mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "rukshani"
    restart: always
  frontend:
    image: guwenqing/datavis-frontend:latest
    restart: always
    ports:
      - "8091:80"
#  frontend:
#    image: nginx:stable
#    restart: always
#    ports:
#      - "8080:8080"
#      - "8081:8081"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#    depends_on:
#      - frontend-login
#      - frontend-dashboard
